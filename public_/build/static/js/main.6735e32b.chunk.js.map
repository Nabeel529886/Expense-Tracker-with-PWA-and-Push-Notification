{"version":3,"sources":["context/GlobalState.tsx","components/Header.tsx","context/AppReducer.ts","components/Balance.tsx","components/IncomeExpense.tsx","components/Transaction.tsx","components/TransactionList.tsx","components/AddTransaction.tsx","components/firebase.ts","App.tsx","index.tsx","swDev.ts"],"names":["ActionType","Header","className","state","action","type","DELETE_TRANSACTION","transactions","filter","transaction","id","payload","ADD_INCOME","ADD_EXPENSE","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addIncome","addExpense","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpense","income","expense","Transaction","text","timeStamp","onClick","TransactionList","AddTransaction","useState","setText","setAmount","transactionTimeStamp","Date","Math","floor","random","toLocaleString","onSubmit","e","preventDefault","document","getElementById","htmlFor","onChange","target","alert","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","messaging","App","Notification","requestPermission","then","permission","getToken","currentToken","console","log","catch","err","ReactDOM","render","StrictMode","navigator","serviceWorker","register","registration"],"mappings":"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","file":"static/js/main.6735e32b.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react'\r\nimport AppReducer from './AppReducer'\r\n\r\n\r\nexport enum ActionType {\r\n    DELETE_TRANSACTION = \"DELETE_TRANSACTION\",\r\n    ADD_INCOME = \"ADD_INCOME\",\r\n    ADD_EXPENSE = \"ADD_EXPENSE\"\r\n}\r\n\r\nexport interface ReducerProps {\r\n    type: ActionType,\r\n    payload: any\r\n    \r\n}\r\n\r\nexport type ContextProps = {\r\n    transactions: transactionsProps[],\r\n    deleteTransaction?: (id: number) => void\r\n    addIncome?: (transaction: transactionsProps) => void, \r\n    addExpense?: (transaction: transactionsProps) => void\r\n}\r\n\r\nexport type transactionsProps = {\r\n    id: number, \r\n    amount: number,\r\n    text: string,\r\n    timeStamp: string\r\n    }\r\n\r\nconst initialState: {transactions: transactionsProps[]} = {\r\n    transactions: []\r\n}\r\n\r\nexport const GlobalContext = createContext<ContextProps>(initialState)\r\n\r\nexport const GlobalProvider: React.FC<React.ReactNode> = ({ children }) => {\r\n    const [state, dispatch] = useReducer<React.Reducer<{transactions: transactionsProps[]}, ReducerProps>>(AppReducer, initialState)\r\n\r\n    function deleteTransaction(id: number){\r\n        dispatch({\r\n            type: ActionType.DELETE_TRANSACTION,\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    function addIncome(transaction: transactionsProps){\r\n        dispatch({\r\n            type: ActionType.ADD_INCOME,\r\n            payload: transaction\r\n        })\r\n    }\r\n\r\n    function addExpense(transaction: transactionsProps){\r\n        dispatch({\r\n            type: ActionType.ADD_EXPENSE,\r\n            payload: transaction\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            deleteTransaction,\r\n            addIncome,\r\n            addExpense,\r\n        }}>\r\n            { children }\r\n        </GlobalContext.Provider>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Expense Tracker</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import { transactionsProps, ReducerProps, ActionType } from './GlobalState'\r\n\r\nexport default (state: {transactions: transactionsProps[]}, action: ReducerProps) => {\r\n    switch(action.type){\r\n        case ActionType.DELETE_TRANSACTION:\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n        case ActionType.ADD_INCOME:\r\n        case ActionType.ADD_EXPENSE:\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useContext } from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\n\r\nconst Balance = () => {\r\n    const { transactions } = useContext(GlobalContext)\r\n\r\n    const amount = transactions.map(transaction => transaction.amount)\r\n\r\n    const total = amount.reduce((acc, item) => (acc+=item), 0).toFixed(2)\r\n    return (\r\n        <div className=\"balance\">\r\n            <h3>Your Balance</h3>\r\n            <h1>${total}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React, { useContext } from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\n\r\n\r\nconst IncomeExpense = () => {\r\n    const {transactions} = useContext(GlobalContext)\r\n\r\n    const amount = transactions.map(transaction => transaction.amount)\r\n\r\n    const income = amount.filter(item => item > 0).reduce((acc,item) => (acc+=item), 0).toFixed(2)\r\n\r\n    const expense = (amount.filter(item => item < 0).reduce((acc,item) => (acc+=item), 0) * -1).toFixed(2)\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div className=\"inc-container\">\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">${income}</p>\r\n            </div>\r\n            <div className=\"exp-container\">\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">${expense}</p>\r\n            </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default IncomeExpense","import React, { useContext } from 'react'\r\nimport {ContextProps, GlobalContext, transactionsProps} from '../context/GlobalState'\r\n\r\n\r\nexport const Transaction = ({ transaction }: {transaction: transactionsProps}) => {\r\n    const {deleteTransaction} = useContext<ContextProps>(GlobalContext)\r\n\r\n    return (\r\n        <div>\r\n            <li className={transaction.amount > 0? \"item-plus\": \"item-minus\"}>\r\n            {transaction.text}<small>{transaction.amount>0? \"Income added on \": \"Expense added on \"}{transaction.timeStamp}</small>\r\n                    <span>${transaction.amount}</span>\r\n                <button onClick={() => deleteTransaction!(transaction.id)}>X</button>\r\n            </li>\r\n        </div>\r\n    )\r\n}","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState'\r\nimport { Transaction } from './Transaction'\r\n\r\nexport const TransactionList = () => {\r\n    const { transactions } = useContext(GlobalContext)\r\n\r\n    return(\r\n        <div className=\"history\">\r\n            <h3>History</h3>\r\n            <div className=\"history-underline\"></div>\r\n            <ul className=\"history-list\">\r\n                {transactions.map(transaction => (\r\n                   <Transaction transaction={transaction} key={transaction.id} />\r\n                ))}\r\n                \r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useState, useContext } from 'react'\r\nimport {ContextProps, GlobalContext} from '../context/GlobalState'\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('')\r\n    const [amount, setAmount] = useState(0)\r\n    const transactionTimeStamp = new Date()\r\n\r\n    const {addIncome, addExpense} = useContext<ContextProps>(GlobalContext)\r\n\r\n    const onSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault()\r\n        const textElement = document.getElementById(\"text\")! as HTMLInputElement\r\n        textElement.value = \"\"\r\n        const amountElement = document.getElementById(\"amount\")! as HTMLInputElement\r\n        amountElement.value = \"0\"\r\n    }\r\n\r\n    const income = {\r\n        id: Math.floor(Math.random() * 10000),\r\n        text,\r\n        amount: +amount,\r\n        timeStamp: transactionTimeStamp.toLocaleString()\r\n    }\r\n\r\n    const expense = {\r\n        id: Math.floor(Math.random() * 10000),\r\n        text,\r\n        amount: -amount,\r\n        timeStamp: transactionTimeStamp.toLocaleString()\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <label className=\"text\" htmlFor=\"text\">Text</label>\r\n                <input id=\"text\" type=\"text\" value={text} onChange={(e) => setText(e.target.value)}/>\r\n                <label className=\"amount\" htmlFor=\"amount\">Amount (Income/Expense)</label>\r\n                <input id=\"amount\" type=\"number\" value={amount} onChange={(e) => setAmount(+e.target.value)} />\r\n                <button className=\"income-btn\" onClick={() => (\r\n                  income.amount === 0?alert(\"Cannot add income of $0\"):addIncome!(income)  \r\n                )}>Income</button>\r\n                <button className=\"expense-btn\" onClick={() => (\r\n                  expense.amount === 0?alert(\"Cannot add expense of $0\"):addExpense!(expense)  \r\n                )}>Expense</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDbG_9zrtL-fiXvK_0dGG_DM5PxEIsvOGE\",\r\n    authDomain: \"expense-tracker-9fc22.firebaseapp.com\",\r\n    databaseURL: \"https://expense-tracker-9fc22.firebaseio.com\",\r\n    projectId: \"expense-tracker-9fc22\",\r\n    storageBucket: \"expense-tracker-9fc22.appspot.com\",\r\n    messagingSenderId: \"612567682473\",\r\n    appId: \"1:612567682473:web:8d153ce5a0cec2578508b8\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  const messaging = firebase.messaging();\r\n\r\n\r\nexport function configNotification() {\r\n    \r\n    Notification.requestPermission().then((permission) => {\r\n        messaging.getToken().then((currentToken) => {\r\n          console.log(`token: ${currentToken}`)\r\n          \r\n          if (currentToken) {\r\n          } else {\r\n            // Show permission request.\r\n            console.log('No registration token available. Request permission to generate one.');\r\n\r\n          }\r\n        }).catch((err) => {\r\n          console.log('An error occurred while retrieving token. ', err);\r\n\r\n        });\r\n    \r\n    \r\n    })\r\n\r\n}","import React from 'react'\nimport './App.css'\nimport Header from './components/Header'\nimport Balance from './components/Balance'\nimport IncomeExpense from './components/IncomeExpense'\nimport { TransactionList } from './components/TransactionList'\nimport { AddTransaction } from './components/AddTransaction'\nimport { GlobalProvider } from './context/GlobalState'\nimport { configNotification } from './components/firebase'\n\n\nfunction App() {\n\n  configNotification()\n\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpense />\n        <TransactionList />\n        <AddTransaction />\n      </div>      \n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { swDev } from './swDev';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nswDev();\n","export const swDev = () => {\r\n    if ('serviceWorker' in navigator){\r\n        navigator.serviceWorker.register('/sw.js').then(function(registration) {\r\n            console.log(\"Service Worker Registration Successful\")\r\n        }, (err) => {\r\n         console.log(\"Service worker registration failed\", err)   \r\n        })\r\n    } else{\r\n        console.log(\"Service Worker not found\")\r\n    }\r\n}"],"sourceRoot":""}